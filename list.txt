class Main{
	function void main()
}
class Game{
	function void init()
	function void ready(int level)
	function int run()
	function void close() 
	function void add_bullet(Bullet bullet)
	function void add_bomb(Bomb bomb)
	function void over()
	function void attack_tank(int x, int y)
}
class Menu{
    constructor Menu new(int _row, int _col, int _n, Array _list)
    function void _xor(int row, int col)
    method void _draw_select(boolean color)
    method void _draw_select(boolean color)
    method void _draw_select(boolean color)
    method char _input()
    method void _reset_cheat()
    method int _check_cheat(char c)
    method int run()
    method void add_cheat(String code)
}
class Album{
    function void init()
    function Image get_tank(int type)
    function Image get_soft()
    function Image get_hard()
    function Image get_QB()
    function Image get_bullet()
    function Image get_bomb(int n)
    function Scalable get_board()
    function Scalable get_board_qb()
}
class Image{
    constructor Image new(int width, int height, Array map)
    function void set_origin(int x, int y)
    function void clear(int x1, int y1, int x2, int y2)
	function void debug(int x1, int y1, int x2, int y2)
    method int _turn_x(int x, int y, int dir)
    method int _turn_y(int x, int y, int dir)
    method void draw(int x, int y, int dir)
}
class Scalable{
    constructor Scalable new(int width, int height, int times, Array map)
    method void draw(int x, int y)
}
class Book{
	function Map get_map(int level)
}
class Map{
	constructor Map new(Array _map)
	method void debug_draw()
	method void draw()
	method boolean check(int x1, int y1, int x2, int y2)
	method void update(int x1, int y1, int x2, int y2, int type)
	method int peek(int x, int y)
	method List get_tank_list()
	method void destroy()
}
class Statement{
	function void init()
	function void draw_frame()
	function void update(int _life, int _enemy, int _score)
	function void display()
}
class Label{
	constructor Label new(int _x, int _y, int _data, String _label)
	method void display()
	method void assign(int _data)
}
class Tank{
    constructor Tank new(int _type, int _x, int _y, int _dir)
	method void set_live(int _live)
    function void init()
    function void set_map(Map _map)
	method void shoot(int _dir)
    method boolean move(int _dir)
	method int get_type()
	method int get_live()
	method int get_dir()
    method boolean dead()
    method int attacked(int _x, int _y)
    method void _die()
}
class Bullet{
	function void init()
	function void set_map(Map _map)
	constructor Bullet new(int _x, int _y, int _dir, int _owner)
	method boolean move()
}
class AI{
    constructor AI new(Tank _tank)
    method void play()
}
class Player{
    constructor Player new(Tank _tank)
    method void play()
}
class Bomb{
	function void init()
	constructor Bomb new(int _x, int _y)
	method boolean explode()
}
class List{
	constructor List new()
    method void reset()
	method boolean end()
    method boolean next()
    method int get()
    method void insert(int data)
    method void delete()
}
class Node{
	constructor Node new(int _data, List _next)
	method void set_next(Node data)
	method Node get_next()
	method int get_data()
}
class Rand{
    function void reset(int _a, int _t)
    function int rand()
}
class CheatCode{
    constructor CheatCode new(String _key)
    method void reset()
    method boolean complete(char a)
}
class Cheat{
	function void init()
	function boolean get_penetrate()
	function boolean get_seperate()
	function boolean get_triple()
	function boolean get_nocd()
	function boolean get_all_soft()
	function void set_penetrate()
	function void set_seperate()
	function void set_triple()
	function void set_nocd()
	function void set_all_soft()
}
